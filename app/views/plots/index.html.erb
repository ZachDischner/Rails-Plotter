<!--
Beneath all the messy and probably poorly written HTML, this page is pretty simple.
The application logic is laid out as follows:

            ______________________________________________________________________
            |                                                                    |
            |                      Status of the selection state                 |
            |                      [ progress gif upon submit ]                  |
            |____________________________________________________________________|
            |                    |                     |                         |   These selections are required to get data. All
            |   Pick X axis var  |   Pick Y axis var   | (optional) Pick Filter  |   plots need an x and a y variable right?
            |                    |                     |                         |   Filter is optional, and depends on your db schema.
            |____________________|_____________________|_________________________|
            |                                |                                   |   "Index" and "Date" assume your db has either some
            |         Pick Index Range       |         Pick Date Range           |   sequential index, a date based index, or both for its
            |            (optional)          |           (optional)              |   typical X variable. If left unselected, no truncation
            |________________________________|___________________________________|   occurs. "Feature" chooses an extra plot feature
            |                                                                    |
            |                             Pick a Feature                         |   Choose extra plot interaction feature
            |____________________________________________________________________|
            |                                                                    |
            |                              [Submit]                              |   Submit selection data for handling in controller,
            |____________________________________________________________________|   plotting in view

In addition, there is a "helper" div that floats along the left side of the page.
    I have made it so that upon hovering over a particular form/page element, a javascript
    function will be triggered that will popup a little helping statement, explaining what
    you are hovering over. See the "switch" statement in the "page_info" javascript
    function at the bottom of the page. Not especially useful, but hopefully it can help

Also, there is a similar helping div that floats along the right hand side of the page. It
    is meant mostly for developers, trying to modify or change this app.
    The div shows all the parameters that are being sent from this page to the doc controller.
    It can be helpful to see exactly what is being selected and sent. The table is dynamically
    populated with the fields of the plotter form. For example, it is insightful to see that
    the "date" fields are sent as three separate params. This fact can be lost upon new
    RoR users.

-->

<style type="text/css" xmlns="http://www.w3.org/1999/html">
    body {
        background: url("images/Stats.jpeg");
        opacity: 0.9;
        font-family:Tahoma;
    }
</style>
<br>

<div>
  <p style=" text-align:center;font:8pt bold"> Brought to you by </p>

  <div style="text-align:center;border-radius:2px;">
    <img width="350px" height="70px" src='images/ZD_Consulting.jpg'
         onmouseover="page_info('ZD')"
         onmouseout="page_info()">
  </div>
  <p style="text-align:center; font:8pt bold"> University of Colorado, Aerospace Engineering Sciences</p>

  <p style="text-align:center; font:8pt bold"> zach.dischner@colorado.edu</p>
</div>
</br>

<table id="mytable" bgcolor=white style="padding:10px;  border-width:10px; border-color:#0033aa; position:relative;
        border-radius:2px;box-shadow: 5em 5em 10em #FFF" align="center" border="4" cellpadding=10px >

  <!--
    Begin the Form. This section is where PARAMS are populated, which are
    used in the database querying and population
  -->

  <tr>
    <td colspan=3 text-align=center style="text-align:center; align:center">
      <%= form_tag "/goplot", :name => "myform", :method => "get" do %>
          <! Selector for the 'x' variable to be plotted>
          <h style="text-align:center"> Select Variables to Plot</h>

          <p style="background-color: #C0C0C0;
                  border-style:solid; border-radius: 0.5em; box-shadow: 8px 8px 5px #808080;text-align:center; padding:10px">

            <!--
                X axis variable for plot window
             -->
            <br>
            <%= label(:plot, :x_var, "X") %>
            <%= select_tag(:x_var, options_for_select(@tags.map { |t| [t, t.to_s] },
                                                      :selected => @x_default),
                           :multiple => false,
                           :onmouseover => "page_info('x_var')",
                           :onmouseout => "page_info()",
                           :onchange => "params_info('x_var')") %>

            <!--
               Y axis variable(s) for plot window
            -->
            <%= label(:plot, :y_var, "Y") %>
            <%= select_tag(:y_var, options_for_select(@tags.map { |t| [t, t.to_s] },
                                                      :selected => @y_default),
                           :multiple => true,
                           :onmouseover => "page_info('y_var')",
                           :onmouseout => "page_info()",
                           :onchange => "params_info('y_var')") %>

            <!--
               Database Filter method. This essentially defines DIFFERENT plot windows, each of which contain
               the X and Y variables as defined above.
               If there is no filter (database columns are unique), just get rid of this section, hardcode this:
               <%# params[:filter] = ["No Filter"] %>
               here or in the controller, and get rid of the following
            -->
            <% if @filters %>
            <%= label(:plot, :filter, "Filter") %>
            <%= select_tag(:filter, options_for_select(@filters.map { |t| [t, t.to_s] },
                                        :selected => @filter_default),
                           :multiple => true,
                           :onmouseover => "page_info('filter')",
                           :onmouseout => "page_info()",
                           :onchange => "params_info('filter')")  %>
            <% end %>


          </p>
          </td>
          </tr>

          <td colspan=3 height=10px style="height:10px">
            <p font=bolder style="text-align:center; font:bold"> Select Range for Horizontal Axis-Either in terms of "X" or Dates</p>
          </td>
          <tr>
          <tr>
            <td>
              <p style="background-color: #C0C0C0; max-width: 450px;height:50px;
                      border-style:outset; border-color: #888888; border-radius: 0.5em;
                      text-align: center;
                      padding:10px ">
                Select "id" Range for Plotting
                <br>
                <%= label(:plot, :x_start, "Start") %>
                <%= number_field_tag(:x_start, params[:x_start],
                                     :onmouseover => "page_info('x_start')",
                                     :onmouseout => "page_info()",
                                     :onchange => "params_info('x_start')") %>

                <%= label(:plot, :x_end, "End") %>
                <%= number_field_tag(:x_end, params[:x_end],{
                                     :onmouseover => "page_info('x_end')",
                                     :onmouseout => "page_info()",
                                     :onchange => "params_info('x_end')"}) %>

              </p>
            </td>


            <!--
                Here is a radiobuttion selector, which decides if you want to view the data
                with checkbox line selectors, or a linear regression option.
            -->

            <td>

              <!--
                This is the block that creates a selector for  Datetime options
                It populates a Datetime param that is used in dynamic scope selectors
              -->
              <p style="background-color: #C0C0C0; width: 350px;height:100px;
                      border-style:outset; border-radius: 0.5em; border-color:#888888;
                      text-align: center;
                      padding:10px" onmouseout="params_info('date_end')" onmouseover="page_info('date_picker')" >
                Select DATE Range for Plotting
                <br>
                <%= label(:plot, :date_start, "Start") %>
                <%= date_select(:date_start, params[:date_start],
                                :start_year  => Plot.year_bounds('first'),
                                :end_year    => Plot.year_bounds('last'),
                                :prompt => { :day => 'Select day', :month => 'Select month', :year => 'Select year' },
                                )  %>
                <br>

                <br>
                <%= label(:plot, :date_end, "End") %>
                <%= date_select(:date_end, params[:date_end],
                                :start_year  => Plot.year_bounds('first'),
                                :end_year    => Plot.year_bounds('last'),
                                :prompt      => { :day => 'Select day', :month => 'Select month', :year => 'Select year' },
                                ) %>
                <br>

              </p>

            </td>
          </tr>

          <!--
          This Section allows the user to pick a feature for the plot. Now just a linear regression,
          line checkboxes, a combination of both, or none at all.
          -->
          <tr>
            <td colspan=3 align=center>

              <% features = ["None","Both","Linear Regression","Checkboxes"] %>
              <%= label(:plot, :feature, "feature") %>
              <%= select_tag(:feature, options_for_select(features,
                                           :selected => @feature_default,),
                             :multiple => false,:include_blank => false,
                             :onmouseover => "page_info('feature')",
                             :onmouseout => "page_info()",
                             :onchange => "params_info('feature')") %>
            </td>
          </tr>


         <!--
            Submit the page data to be handled by   /app/controllers/plots_controller
         -->
          <tr>
            <td colspan=3 style="align:center; text-align:center">
              <%= submit_tag "submit!", :onmouseover => "page_info('submit')",
                                        :onmouseout => "page_info()",
                                        :onclick => "showloading()" %>
            </td>
          </tr>
          </table>


      <% end %>    <!-- ends the form for selecting data -->




<!--
       Section of helper HTML elements and Javascript functions.
       Not necessary for operation, but helpful (hopefully) in tweaking and insight.
       More useful for development of future apps and stuff
 -->

      <% if params[:debug] %>
      <div id="helperDIV" style="background-color:#87cefa;border:3px outset gray; border-radius:10px; width:auto;max-width:250px;
              padding-left:8px; padding-right:8px; display:block; top:25%; left:10px; position:fixed; text-align:center"
              onmouseover="page_info('helper')" onmouseout="page_info()">
        <table>
          <tr>
            <td>
              <img src="images/question.gif" onclick="toggle_visibility('helper'), page_info()">
            </td>
            <td>
              <p id="helper" style="font-weight:bold; font-size:10pt; visibility:hidden; width:auto">
              </p>
            </td>
          </tr>
        </table>
      </div>



      <div align=center style="background-color:#87CEFA;border:3px outset gray; border-radius:10px; width:auto;
              padding-left:8px; padding-right:8px; display:block; top:10%; right:10px; position:fixed; max-width:200px"
              onmouseover="page_info('params')" onmouseout="page_info()">
        <table>
          <tr>
          <td id="ParamsPrompt"> Click to Hide </td>
          </tr>
          <tr>

        <img src="images/rails.jpeg" width=80px align=center onclick="toggle_visibility('ParamsDIV')" onclick="params_info()">

          </tr>
        </table>
        <div id="ParamsDIV" visibility="visible">
          <p id="ParamsStatement" style="font-size:9pt"></p>
          <table id='ParamTable' visibility="visible" style="max-width:100px; font-size:8pt; font-weight:bold; table-layout:fixed">
            <!--Table gets built with Javascript stuff and things-->
          </table>
        </div>
      </div>


          <!--<div id="status" align="center" style="align:center; display:block; padding-top:20px">-->
            <!--<p id="StatusString" style="display:block"> You are Now Selecting Data</p>-->
            <!--<img id="LoadingIMG" style="display:none; height:150px; width:300px" src="images/singif.gif">-->
          <!--</div>-->

          <% end %>

      <script language="javascript" type="text/javascript">
<% if params[:debug] %>
         document.getElementById("ParamsDIV").style.visibility="visible"
         params_info();
<%end%>

          function showloading()
          {
                document.getElementById('mytable').innerHTML = ''+
                        '<tr>' +
                        '   <td>' +
                        '       <div id="status" align="center" style="align:center; display:block;">' +
                        '       <p id="StatusString" style="display:block"> Processing Your Request</p>' +
                        '           <img id="LoadingIMG" style="display:block; height:250px; width:800px" src="images/singif.gif">' +
                        '       </div>  ' +
                        '   </td>' +
                        '</tr>';
//              toggle_visibility('mytable')
//              document.getElementById('mytable').innerHTML=''
//              document.getElementById("StatusString").innerHTML = "Processing Your Request";
//              document.getElementById("LoadingIMG").style.display = "block"
          }

          function page_info(x) {
              var helper_div = document.getElementById("helper");
              if (document.getElementById("helper").style.visibility == 'visible')
              {
                  switch (x) {
                      case 'ZD':
                          helper_div.innerHTML = "Class of 2012-Summa Kum Dumass";
                          break;
                      case 'x_var':
                          helper_div.innerHTML = "Choose the variable for the X axis of plot" +
                                                                         " (typically database column)";
                          break
                      case 'y_var':
                          helper_div.innerHTML = "Choose variable(s) for the y axis of plot" +
                                                                         " (typically database column)";
                          break
                      case 'filter':
                          helper_div.innerHTML = "Filter selector for database query. Filters column " +
                                                                            "selections based on 'filter' row indicators" ;
                          break;
                      case 'feature':
                          document.getElementById("helper").innerHTML = "Choose a plot feature. Renders different interaction functionality";
                          break;
                      case 'x_start':
                          document.getElementById("helper").innerHTML = "Select te starting X index for your plot range (starting row for database query)";
                          break;
                      case 'x_end':
                          document.getElementById("helper").innerHTML = "Select te ending X index for your plot range (ending row for database query)";
                          break;
                      case 'date_picker':
                          document.getElementById("helper").innerHTML = "Select the starting/ending date for the plot range (starting/ending row for database query)";
                          break;
                      case 'submit':
                          document.getElementById("helper").innerHTML = "Click to begin the plotting experience!";
                          break;
                      case 'params':
                          document.getElementById("helper").innerHTML = "For developers: Shows exactly which 'params[]' are " +
                                                                           "being sent to app/plots/plots_controller.rb" ;
                          break;
                      case 'helper':
                          document.getElementById("helper").innerHTML = "Simple explination of page sections. Disable by changing   params[:debug]  to  'false' in" +
                                                                                    "   app/controllers/plots_controller.rb [index]";
                          break;
                      default:
                          document.getElementById("helper").innerHTML = "Hover over a form area for help";
                  }
              }


          }

         // Much of this function is database/setup dependant. Not as dynamic or generic as the rest of the app.
         // But unnecessary for proper functionality. Modify accordingly.

         function params_info(param) {
             if (document.getElementById("ParamsDIV").style.visibility == 'visible')
             {

                 document.getElementById("ParamsStatement").innerHTML = "These are the Params[] you are sending";
                 var mytable = document.getElementById("ParamTable");

                 for (var i = 0; i < document.myform.elements.length; i++) {     // myform is the name of the form built above
                     if (mytable.getElementsByTagName('tr').length < document.myform.elements.length) {

                         var row = mytable.insertRow(i);
                         var cell1 = row.insertCell(0);
                         var cell2 = row.insertCell(1);
                     }
                     else {
                         var row = mytable.getElementsByTagName('tr')[i];
                         cell1 = row.getElementsByTagName('td')[0];
                         cell2 = row.getElementsByTagName('td')[1];
                     }

                     cell1.innerHTML = document.myform.elements[i].name;
                     var cell_value = "";
                     var Element_Name = document.myform.elements[i].name;
                     switch (Element_Name) {
//                  case 'x_var':
//                  cell_value = getSelectedOptions('x_var')
//                  break;
                         case 'y_var[]':
                             cell_value = getSelectedOptions('y_var');
                             break;
                         case 'filter[]':
                             cell_value = getSelectedOptions('filter');
                             break;
                         default:
                             cell_value = document.myform.elements[i].value;

                     }
                     cell2.innerHTML = cell_value;//document.myform.elements[i].value // params_info2(document.myform.elements[i].name,i)
                     cell2.style.maxWidth = '100px';
                     cell2.style.textWrap = 'normal'
                 }
             }
             else
             {
                 document.getElementById("ParamTable").innerHTML = "";
             }

         }

//         function get_form_value(param,idx) {
//
//    var mytable = document.getElementById("ParamTable");
//    //create a new table if this does not exist?
//    var rownum;
//    var cell_value;
//
//    switch (param) {
//        case 'x_var':
//            rownum = 0;
//            cell_value = document.myform.elements.length; //getRadioValue(param);
//            break;
//        case 'y_var':
//            rownum = 1;
//            cell_value = getSelectedOptions(param);
//            break;
//        case 'filter':
//            rownum = 2;
//            cell_value = getSelectedOptions(param);
//            break;
//        case 'x_start':
//            rownum = 3;
//            cell_value = getSelectedOptions(param);
//            break;
//        case 'x_end':
//            rownum = 4;
//            cell_value = getSelectedOptions(param);
//            break;
//        case 'feature':
//            rownum = 4;
//            cell_value = getRadioValue(param);
//            break;
//        case 'date_start':
//            rownum = 5;
//            cell_value = getDateValues(param);
//            break;
//        case 'date_end':
//            rownum = 6;
//            cell_value = getDateValues(param);
//            break;
//        default:
//                cell_value = document.myform.element[idx].value ;
//    }
//
//    return cell_value
//
//}


// Returns an array of selected options from a list
function getSelectedOptions(options) {
    var list = document.getElementById(options);
    var SelectedValues = [];
    if (list.options == undefined) {
        return list.value
    }

    for (var i = 1; i < list.options.length; i++) {
        if (list.options[i].selected == true) {
            SelectedValues.push(list.options[i].value + " ");
        }
    }
    return SelectedValues;

}


         // Parses single date value, parsed from the three date drop downs
         // provided in the date selector
         function getDateValues(DateElement) {
             var DateValues = [
                 (document.getElementById(DateElement + '__1i').value),
                 (document.getElementById(DateElement + '__2i').value),
                 (document.getElementById(DateElement + '__3i').value)
             ];
             return new Date(DateValues);
         }

// ENABLE IF YOU WANT TO GET THE VALUE OF A SET OF RADIO BUTTONS FOR DISPLAY
//         function getRadioValue(tmp) {
//             var CheckedString = "";
//
//
//             if (document.getElementById('feature_Linear_Regression').checked) {
//                 CheckedString = "Linear Regression"
//             }
//             if (document.getElementById('feature_Both').checked) {
//                 CheckedString = "Both (experimental)"
//             }
//
//             if (document.getElementById('feature_Checkboxes').checked) {
//                 CheckedString = "Checkboxes ";
//             }
//
//             return CheckedString
//         }


         function toggle_visibility(id) {
             var e = document.getElementById(id);
             if (e.style.visibility == 'hidden')
                 e.style.visibility = 'visible';
             else
                 e.style.visibility = 'hidden';

             // More specific actions for certain document elements
             switch (id) {
                 case "helper":
                     e.innerHTML = ""; // Simple cheating way to resize the area once "helper" is turned off
                     break;
                 case "ParamsDIV":
                     if (e.style.visibility == 'visible')
                         {
                             document.getElementById("ParamsPrompt").innerHTML = "Click to Hide";
                             params_info();       //run the function to build the table
                         }

                     else
                         {
                             document.getElementById("ParamsPrompt").innerHTML = "Click to Show";
                             document.getElementById("ParamTable").innerHTML = "";
                         }
                     break;
             }

         }

      </script>

